AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  # 環境設定
  EnvironmentType:
    Description: The environment type
    Type: String
    Default: staging
    AllowedValues:
      - prod
      - staging
      - dev
    ConstraintDescription: must be a prod or staging or dev

Resources:
  # IAM Settings
  LambdaCustomPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: Lambda-Policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action:
              - s3:ListAllMyBuckets
              - s3:ListBucket
              - s3:GetObject
            # [TODO] Resourceの修正
            Resource: "*"
          -
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            # [TODO] Resourceの修正
            Resource: "*"
          -
            Effect: Allow
            Action:
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ReceiveMessage
              - sqs:sendMessage
            Resource: 
              - !GetAtt FirstSQSQueue.Arn
              - !GetAtt SecondSQSQueue.Arn
          -
            Effect: Allow
            Action:
              - dynamodb:Get*
              - dynamodb:Query
              - dynamodb:PutItem
              - dynamodb:Delete
            Resource: !GetAtt Lambda1toDynamoDBTable.Arn

  InlinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: Lambda-Runcommand-InlinePolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Action:
              - ssm:SendCommand
              - ssm:ListCommandInvocations
              - ssm:GetCommandInvocation
              # [TODO] Resourceの修正
            Resource: '*'
      Roles:
        - !Ref SecondLambdaRole
  
  FirstLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - !Ref LambdaCustomPolicy

  SecondLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - !Ref LambdaCustomPolicy

  # FirstSQS Settings
  FirstSQSDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: dev-lambda1-dead-letter-queue
  FirstSQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 60
      QueueName: dev-lambda1-letter-queue
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt FirstSQSDeadLetterQueue.Arn
        # メッセージが配信不能キューに移動される前にソースキューに配信された回数。
        maxReceiveCount: 1
      # メッセージがキューから配信された後、メッセージが使用できなくなる時間の長さ。
      VisibilityTimeout: 10

  # SecondSQS Settings
  SecondSQSDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: dev-lambda2-dead-letter-queue
  SecondSQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 60
      QueueName: dev-lambda2-letter-queue
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SecondSQSDeadLetterQueue.Arn
        # メッセージが配信不能キューに移動される前にソースキューに配信された回数。
        maxReceiveCount: 1
      # メッセージがキューから配信された後、メッセージが使用できなくなる時間の長さ。
      VisibilityTimeout: 10

  # DynamoDB Settings
  Lambda1toDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "N"
        -
          AttributeName: "user_name"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
        -
          AttributeName: "user_name"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      TableName: "Lambda1-DynamoDBTable"

  #Lambda1 Settings
  Lambda1Function:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: Lambda1-Function
      Runtime: python3.6
      Role: !GetAtt FirstLambdaRole.Arn
      Handler: index.handler
      Code:
        ZipFile: |
          def lambda_handler(event, context):
            print "OK!!"

  # Lambda1のイベントトリガーを設定する
  EventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties: 
      Enabled: true
      EventSourceArn: !GetAtt FirstSQSQueue.Arn
      FunctionName: !Ref Lambda1Function
      BatchSize: 1

  # Lambda1の送信先(Destination)を指定する
  NextDestination:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
          # 成功・失敗それぞれの送信先を設定することが可能
          OnSuccess:
            # 送信先の設定
            Destination: !GetAtt SecondSQSQueue.Arn
      FunctionName: !Ref Lambda1Function
      MaximumEventAgeInSeconds: 60
      MaximumRetryAttempts: 1
      Qualifier: $LATEST

Outputs: 
  FirstSQSQueueURL: 
    Description: "URL of new First SQS Queue"
    Value: 
      Ref: FirstSQSQueue
  FirstSQSDeadLetterQueueURL: 
    Description: "URL of new FirstSQS DeadLetterQueue"
    Value: 
      Ref: FirstSQSDeadLetterQueue
  FirstSQSQueueURL: 
    Description: "ARN of new FirstSQS Queue"
    Value: !GetAtt FirstSQSQueue.Arn
  FirstSQSDeadLetterQueueARN: 
    Description: "ARN of new FirstSQS DeadLetterQueue"
    Value:  !GetAtt FirstSQSDeadLetterQueue.Arn
  SecondSQSQueueURL: 
    Description: "URL of new SecondSQS Queue"
    Value: 
      Ref: SecondSQSQueue
  SecondSQSDeadLetterQueueURL: 
    Description: "URL of new SecondSQS DeadLetterQueue"
    Value: 
      Ref: SecondSQSDeadLetterQueue
  SecondSQSQueueURL: 
    Description: "ARN of new SecondSQS Queue"
    Value: !GetAtt SecondSQSQueue.Arn
  SecondSQSDeadLetterQueueARN: 
    Description: "ARN of new SecondSQS DeadLetterQueue"
    Value: !GetAtt SecondSQSDeadLetterQueue.Arn
  # DynamoDBのTableName出力
  DynameDBName: 
    Description: "Name of DynamoDB TableName"
    Value: 
      Ref: Lambda1toDynamoDBTable

